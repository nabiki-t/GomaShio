<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccountTitleText.Text" xml:space="preserve">
    <value>アカウント</value>
  </data>
  <data name="AddAccountButton.ToolTipService.ToolTip" xml:space="preserve">
    <value>アカウントの追加</value>
  </data>
  <data name="AddInquiryButton.ToolTipService.ToolTip" xml:space="preserve">
    <value>項目を追加</value>
  </data>
  <data name="AppMessageBoxTitle" xml:space="preserve">
    <value>GomaShio</value>
  </data>
  <data name="CopyAccountButton.ToolTipService.ToolTip" xml:space="preserve">
    <value>選択されたアカウントを複製</value>
  </data>
  <data name="CopyInquiryButton.ToolTipService.ToolTip" xml:space="preserve">
    <value>選択された項目を複製</value>
  </data>
  <data name="CreateNewDescription.Text" xml:space="preserve">
    <value>保存対象のファイルを新規に作成します。既存のファイルを指定した場合は、ファイルの内容はすべて削除されます。</value>
  </data>
  <data name="CreateNewPasswordFileButton.Content" xml:space="preserve">
    <value>新規に作成する</value>
  </data>
  <data name="DefaultPasswordDigits" xml:space="preserve">
    <value>8</value>
  </data>
  <data name="DefaultSymbolCandidateString" xml:space="preserve">
    <value>!$%'()*,/;=&gt;?[]{}</value>
  </data>
  <data name="DeleteAccountButton.ToolTipService.ToolTip" xml:space="preserve">
    <value>選択されたアカウントを削除</value>
  </data>
  <data name="DeleteInquiryButton.ToolTipService.ToolTip" xml:space="preserve">
    <value>選択された項目を削除</value>
  </data>
  <data name="EditEnableToggle.OffContent" xml:space="preserve">
    <value>読取専用</value>
  </data>
  <data name="EditEnableToggle.OnContent" xml:space="preserve">
    <value>変更可</value>
  </data>
  <data name="EditInquiryDialog.PrimaryButtonText" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="EditInquiryDialog.SecondaryButtonText" xml:space="preserve">
    <value>キャンセル</value>
  </data>
  <data name="EditInquiryDialog.Title" xml:space="preserve">
    <value>項目の編集</value>
  </data>
  <data name="ExportPasswordFileButton.Content" xml:space="preserve">
    <value>エクスポート</value>
  </data>
  <data name="ExportPasswordFileDescription.Text" xml:space="preserve">
    <value>現在読み込まれているパスワードの一覧を平文でファイルに出力します。</value>
  </data>
  <data name="FileSettingsPageTitleText.Text" xml:space="preserve">
    <value>設定</value>
  </data>
  <data name="GomaShioFileTypeDescription" xml:space="preserve">
    <value>GomaShioパスワードファイル</value>
  </data>
  <data name="HideItemValueCheck" xml:space="preserve">
    <value>設定値を表示しない</value>
  </data>
  <data name="ImportPasswordFileButton.Content" xml:space="preserve">
    <value>インポート</value>
  </data>
  <data name="ImportPasswordFileDescription.Text" xml:space="preserve">
    <value>ファイルに出力した平文のパスワード一覧を読み込みます。現在登録されているパスワードはすべて削除されます。</value>
  </data>
  <data name="InquiryDefaultName1.Text" xml:space="preserve">
    <value>ユーザID</value>
  </data>
  <data name="InquiryDefaultName2.Text" xml:space="preserve">
    <value>パスワード</value>
  </data>
  <data name="InquiryDefaultName3.Text" xml:space="preserve">
    <value>URL</value>
  </data>
  <data name="InquiryItemNameTitle.Text" xml:space="preserve">
    <value>項目名</value>
  </data>
  <data name="InquiryItemValueTitle.Text" xml:space="preserve">
    <value>設定値</value>
  </data>
  <data name="MainPageAccountListRadio.Content" xml:space="preserve">
    <value>アカウント一覧</value>
  </data>
  <data name="MainPageConfiguRadio.Content" xml:space="preserve">
    <value>設定</value>
  </data>
  <data name="MSG_BUCKUP_FILE_NOT_EXIST" xml:space="preserve">
    <value>回復可能なバックアップは存在しません。</value>
  </data>
  <data name="MSG_FAILED_CREATE_NEW_FILE" xml:space="preserve">
    <value>It failed to create new password file, please fix cause of any error.</value>
  </data>
  <data name="MSG_FAILED_LOAD_PASSWORD_FILE" xml:space="preserve">
    <value>パスワードファイルの読み込みに失敗しました。</value>
  </data>
  <data name="MSG_INITIAL_USE_MSG" xml:space="preserve">
    <value>初めて使用する時は、パスワードと保存先のファイル名を指定してください。</value>
  </data>
  <data name="NewPassDSavePasswordCheck.Content" xml:space="preserve">
    <value>パスワードを保存する</value>
  </data>
  <data name="PassExcludeConfuseCheck.Content" xml:space="preserve">
    <value>紛らわしい文字を除外する</value>
  </data>
  <data name="PassGenerateButton.Content" xml:space="preserve">
    <value>パスワードの生成</value>
  </data>
  <data name="PassLowerCaseCheck.Content" xml:space="preserve">
    <value>英小文字</value>
  </data>
  <data name="PassNumberCheck.Content" xml:space="preserve">
    <value>数字</value>
  </data>
  <data name="PassSymbolCheck.Content" xml:space="preserve">
    <value>記号</value>
  </data>
  <data name="PassUpperCaseCheck.Content" xml:space="preserve">
    <value>英大文字</value>
  </data>
  <data name="PasswordDialog.PrimaryButtonText" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="PasswordDialog.SecondaryButtonText" xml:space="preserve">
    <value>キャンセル</value>
  </data>
  <data name="PasswordDigitTitle.Text" xml:space="preserve">
    <value>桁数</value>
  </data>
  <data name="PasswordErrorText.Text" xml:space="preserve">
    <value>パスワードが違います</value>
  </data>
  <data name="PasswordText1Title.Text" xml:space="preserve">
    <value>暗号・復号に使用するパスワードを入力してください</value>
  </data>
  <data name="PasswordText2Title.Text" xml:space="preserve">
    <value>確認のためもう一度入力して下さい</value>
  </data>
  <data name="PASS_HIDDEN_STRING" xml:space="preserve">
    <value>******</value>
  </data>
  <data name="RecoveryBackupDialog.PrimaryButtonText" xml:space="preserve">
    <value>閉じる</value>
  </data>
  <data name="RecoveryBackupDialog.Title" xml:space="preserve">
    <value>バックアップからファイルを取得</value>
  </data>
  <data name="RecoveryBackupGetButton.Content" xml:space="preserve">
    <value>取得</value>
  </data>
  <data name="RecoveryFromBackupButton.Content" xml:space="preserve">
    <value>リカバリ</value>
  </data>
  <data name="RecoveryFromBackupDescription.Text" xml:space="preserve">
    <value>バックアップファイルから古いパスワードファイルを取得します。</value>
  </data>
  <data name="SavePasswordCheck.Content" xml:space="preserve">
    <value>パスワードを保存する</value>
  </data>
  <data name="SelectedFileNameTitle.Text" xml:space="preserve">
    <value>保存先ファイル名</value>
  </data>
  <data name="SelectExistingDescription.Text" xml:space="preserve">
    <value>既存のファイルを使用するよう設定します。</value>
  </data>
  <data name="SelectExistingPasswordFileButton.Content" xml:space="preserve">
    <value>既存のファイルを使う</value>
  </data>
  <data name="SetNewPassDialog.PrimaryButtonText" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="SetNewPassDialog.SecondaryButtonText" xml:space="preserve">
    <value>キャンセル</value>
  </data>
  <data name="SetNewPassDialog.Title" xml:space="preserve">
    <value>パスワードの設定</value>
  </data>
  <data name="TextFileTypeDescription" xml:space="preserve">
    <value>テキストファイル</value>
  </data>
</root>